// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using comercioLocalAPI;

#nullable disable

namespace comercioLocalAPI.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20230325205343_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClienteFornecedor", b =>
                {
                    b.Property<Guid>("clientesusuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("fornecedoresusuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("clientesusuarioId", "fornecedoresusuarioId");

                    b.HasIndex("fornecedoresusuarioId");

                    b.ToTable("ClienteFornecedor");
                });

            modelBuilder.Entity("comercioLocalAPI.Model.Negociacao", b =>
                {
                    b.Property<Guid>("NegociacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime2");

                    b.Property<int>("idCliente")
                        .HasColumnType("int");

                    b.Property<int>("idFornecedor")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<Guid?>("usuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NegociacaoId");

                    b.HasIndex("usuarioId");

                    b.ToTable("Negociacoe");
                });

            modelBuilder.Entity("comercioLocalAPI.Model.Produto", b =>
                {
                    b.Property<Guid>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NegociacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descricaoProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("fornecedorusuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("idFornecedor")
                        .HasColumnType("int");

                    b.Property<int>("idNegociacao")
                        .HasColumnType("int");

                    b.Property<string>("nomeProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantidadeProduto")
                        .HasColumnType("int");

                    b.Property<double>("valorProuto")
                        .HasColumnType("float");

                    b.HasKey("ProdutoId");

                    b.HasIndex("NegociacaoId");

                    b.HasIndex("fornecedorusuarioId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("comercioLocalAPI.Model.Usuario", b =>
                {
                    b.Property<Guid>("usuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("endereço")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeEmpresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeResponsavel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("usuarioId");

                    b.ToTable("Usuario");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("comercioLocalAPI.Model.Cliente", b =>
                {
                    b.HasBaseType("comercioLocalAPI.Model.Usuario");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("comercioLocalAPI.Model.Fornecedor", b =>
                {
                    b.HasBaseType("comercioLocalAPI.Model.Usuario");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("contadorVendas")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Fornecedor");
                });

            modelBuilder.Entity("ClienteFornecedor", b =>
                {
                    b.HasOne("comercioLocalAPI.Model.Cliente", null)
                        .WithMany()
                        .HasForeignKey("clientesusuarioId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("comercioLocalAPI.Model.Fornecedor", null)
                        .WithMany()
                        .HasForeignKey("fornecedoresusuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("comercioLocalAPI.Model.Negociacao", b =>
                {
                    b.HasOne("comercioLocalAPI.Model.Usuario", null)
                        .WithMany("negociacoes")
                        .HasForeignKey("usuarioId");
                });

            modelBuilder.Entity("comercioLocalAPI.Model.Produto", b =>
                {
                    b.HasOne("comercioLocalAPI.Model.Negociacao", "negociacao")
                        .WithMany("produtos")
                        .HasForeignKey("NegociacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("comercioLocalAPI.Model.Fornecedor", "fornecedor")
                        .WithMany("produtos")
                        .HasForeignKey("fornecedorusuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fornecedor");

                    b.Navigation("negociacao");
                });

            modelBuilder.Entity("comercioLocalAPI.Model.Negociacao", b =>
                {
                    b.Navigation("produtos");
                });

            modelBuilder.Entity("comercioLocalAPI.Model.Usuario", b =>
                {
                    b.Navigation("negociacoes");
                });

            modelBuilder.Entity("comercioLocalAPI.Model.Fornecedor", b =>
                {
                    b.Navigation("produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
